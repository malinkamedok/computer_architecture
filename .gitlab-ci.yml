image: golang:1.18-alpine

stages:
  - build
  - test

lint:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  stage: test
  before_script:
    - echo "machine gitlab.widas.de login $GITLAB_LOGIN password $GITLAB_TOKEN" > ~/.netrc
  script:
    - '[ -e .golangci.yml ] || cp /golangci/.golangci.yml .'
    - golangci-lint run --issues-exit-code 0 --out-format code-climate | tee gl-code-quality-report.json | jq -r '.[] | "\(.location.path):\(.location.lines.begin) \(.description)"'
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json

build:
  stage: build
  script:
    - go build ./...
  artifacts:
    untracked: true
    expire_in: 1 hour
    
test:
  stage: test
  before_script:
    - apk add --no-cache make
  script:
    - make tests
  artifacts:
    when: always
    paths:
      - test-report.json
      - coverage.out
    expire_in: 1 hour
